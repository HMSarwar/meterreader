# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meterreader.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11meterreader.proto\",\n\x13MeterReaderResponse\x12\x15\n\rmeterresponse\x18\x01 \x01(\t\":\n\x12MeterReaderRequest\x12\x12\n\nstart_time\x18\x01 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x02 \x01(\t2G\n\x0bMeterReader\x12\x38\n\tReadMeter\x12\x13.MeterReaderRequest\x1a\x14.MeterReaderResponse\"\x00\x62\x06proto3')



_METERREADERRESPONSE = DESCRIPTOR.message_types_by_name['MeterReaderResponse']
_METERREADERREQUEST = DESCRIPTOR.message_types_by_name['MeterReaderRequest']
MeterReaderResponse = _reflection.GeneratedProtocolMessageType('MeterReaderResponse', (_message.Message,), {
  'DESCRIPTOR' : _METERREADERRESPONSE,
  '__module__' : 'meterreader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReaderResponse)
  })
_sym_db.RegisterMessage(MeterReaderResponse)

MeterReaderRequest = _reflection.GeneratedProtocolMessageType('MeterReaderRequest', (_message.Message,), {
  'DESCRIPTOR' : _METERREADERREQUEST,
  '__module__' : 'meterreader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReaderRequest)
  })
_sym_db.RegisterMessage(MeterReaderRequest)

_METERREADER = DESCRIPTOR.services_by_name['MeterReader']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _METERREADERRESPONSE._serialized_start=21
  _METERREADERRESPONSE._serialized_end=65
  _METERREADERREQUEST._serialized_start=67
  _METERREADERREQUEST._serialized_end=125
  _METERREADER._serialized_start=127
  _METERREADER._serialized_end=198
# @@protoc_insertion_point(module_scope)
